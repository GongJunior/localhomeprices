// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace appapi.data.Migrations
{
    [DbContext(typeof(HousingDb))]
    [Migration("20231005025658_AddReqRelationship")]
    partial class AddReqRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("HousingDetail", b =>
                {
                    b.Property<int>("HousingDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "bathrooms");

                    b.Property<int?>("Bedrooms")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "bedrooms");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "city");

                    b.Property<string>("HomeStatus")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "homeStatus");

                    b.Property<string>("HomeType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "homeType");

                    b.Property<string>("ImgLink")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "imgSrc");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "latitude");

                    b.Property<int?>("LivingArea")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "livingArea");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "longitude");

                    b.Property<string>("LotAreaUnit")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lotAreaUnit");

                    b.Property<double?>("LotAreaValue")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "lotAreaValue");

                    b.Property<int?>("Price")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.Property<int?>("RentEstimate")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "rentZestimate");

                    b.Property<int>("RequestEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "state");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "streetAddress");

                    b.Property<int?>("TaxAssessedValue")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "taxAssessedValue");

                    b.Property<int?>("Zestimate")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "zestimate");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "zipcode");

                    b.HasKey("HousingDetailID");

                    b.HasIndex("RequestEventId");

                    b.ToTable("HousingDetails");
                });

            modelBuilder.Entity("RequestEvent", b =>
                {
                    b.Property<int>("RequestEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActualTotalResults")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpectedTotalResults")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequestEnvironment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestGroupHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestTimeUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequestEventId");

                    b.ToTable("RequestEvents");
                });

            modelBuilder.Entity("HousingDetail", b =>
                {
                    b.HasOne("RequestEvent", null)
                        .WithMany("HousingDetails")
                        .HasForeignKey("RequestEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RequestEvent", b =>
                {
                    b.Navigation("HousingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
