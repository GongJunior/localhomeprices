// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace appapi.data.Migrations
{
    [DbContext(typeof(HousingDb))]
    [Migration("20230923155712_AddTables")]
    partial class AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("HousingDetail", b =>
                {
                    b.Property<int>("HousingDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Bedrooms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImgLink")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("LivingArea")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("LotAreaUnit")
                        .HasColumnType("TEXT");

                    b.Property<double?>("LotAreaValue")
                        .HasColumnType("REAL");

                    b.Property<int?>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RentEstimate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TaxAssessedValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zestimate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("HousingDetailID");

                    b.ToTable("HousingDetails");
                });

            modelBuilder.Entity("RequestEvent", b =>
                {
                    b.Property<int>("RequestEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActualTotalResults")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpectedTotalResults")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequestEnvironment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestGroupHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestTimeUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestUri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequestEventId");

                    b.ToTable("RequestEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
